.graph-data__1 {
    opacity: 0.4;
    border-radius: 7px;
    transition: all .3s ease-in-out;

    &:hover {
        opacity: 0.7;
    }
}

.form__input {
    height: 35px;
    border: 1px solid $secondary-grey;
    border-radius: 3px;
    text-indent: 6px;

    &:focus {
        outline: none;
        box-shadow: 0px 0px 3px $primary-yellow;
        border:1px solid $primary-yellow;

        &:hover {
            outline: none;
            box-shadow: 0px 0px 3px $primary-yellow;
            border:1px solid $primary-yellow;
            border-radius:0;
        }
    }
}

// input[type='radio'] {
//     width: 20px;
//     height: 20px;
//     border: 2px solid $secondary-orange;
//     border-radius: 20px;
//     //top: -2px;
//     //left: -1px;
//     position: relative;
//     // background-color: #d1d3d1;
//     // content: '';
//     // display: inline-block;
//     // visibility: visible;
//     // border: 2px solid white;
// }

input[type='radio']:after {
    width: 20px;
    height: 20px;
    border: 2px solid $secondary-orange;
    border-radius: 20px;
    top: -3px;
    left: -5px;
    position: relative;
    background-color: white;
    content: '';
    display: inline-block;
    visibility: visible;
}

input[type='radio']:checked:after {
    width: 20px;
    height: 20px;
    border: 2px solid $secondary-orange;
    border-radius: 20px;
    top: -3px;
    left: -5px;
    position: relative;
    background-color: $primary-yellow;
    content: '';
    display: inline-block;
    visibility: visible;
}

.button-modal-yes {
  background-color: #3aa827;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-weight: 500;
  width: 100%;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 3px;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,
              rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
}

.button-modal-no {
  background-color: #ad4124;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-weight: 500;
  width: 100%;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 3px;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,
              rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
}

.modal-box {
    box-shadow: 
        rgba(0, 0, 0, 0.25) 0px 54px 55px, 
        rgba(0, 0, 0, 0.12) 0px -12px 30px, 
        rgba(0, 0, 0, 0.12) 0px 4px 6px, 
        rgba(0, 0, 0, 0.17) 0px 12px 13px, 
        rgba(0, 0, 0, 0.09) 0px -3px 5px;
        border: none;
}



.check__container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default checkbox */
  .check__container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .check__checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    border: 2px solid $secondary-orange;
    background-color: white;
  }
  
  /* On mouse-over, add a grey background color */
  .check__container:hover input ~ .check__checkmark {
    background-color: $secondary-grey;
  }
  
  /* When the checkbox is checked, add a blue background */
  .check__container input:checked ~ .check__checkmark {
    background-color: $primary-yellow;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .check__checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .check__container input:checked ~ .check__checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .check__container .check__checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }



